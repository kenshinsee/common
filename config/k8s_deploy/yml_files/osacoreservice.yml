apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  name: osacoreservice
  namespace: osa-suite
  labels:
    app: osacoreservice
spec:
  replicas: 12
  template:
    metadata:
      labels:
        app: osacoreservice
        track: stable
    spec:
      dnsConfig:
        options:
          - name: single-request-reopen
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
              - matchExpressions:
                  - key: node-role.kubernetes.io/master
                    operator: DoesNotExist
      volumes:
      - name: tz-config
        hostPath:
          path: /usr/share/zoneinfo/America/New_York
      - name: systemconf
        configMap:
          name: systemconf
      - name: configkeystore
        emptyDir: {}
      - name: datafolder
        emptyDir: {}
      containers:
      - name: osacoreservice
        image: rsiiris/{{IMAGE_URL}}
        resources:
           limits:
             memory: 12Gi
           requests:
             memory: 4Gi
        command: ["/bin/bash", "-c"] 
        args:
        - source /config/env.properties;
          env|grep MY_POD_NAME=|awk -F "-" '{print $1}' > /pod.properties ;
          source /pod.properties ; 
          java
           -Xms4096m
           -Xmx11264m
           -Duser.timezone=America/New_York            
           -Dspring.rabbitmq.host=${RABBITHOST} 
           -Dspring.rabbitmq.port=${RABBITPORT} 
           -Dspring.rabbitmq.username=${RABBITUSER} 
           -Dspring.rabbitmq.pmpuser=${PMPRABBITUSER}
           -Dspring.rabbitmq.password=${RABBITPASS} 
           -Dspring.rabbitmq.listener.simple.max-concurrency=1 
           -Dspring.rabbitmq.listener.simple.concurrency=1
           -Dspring.rabbitmq.ssl.enabled=true
           -Dspring.rabbitmq.ssl.verify-hostname=false
           -Dspring.rabbitmq.ssl.algorithm=TLSv1.2 
           -Dspring.rabbitmq.ssl.trust-store=file:/config/keystore/rabbitstore 
           -Dspring.rabbitmq.ssl.trust-store-password=T3ciT3ci2 
           -Dspring.rabbitmq.ssl.trust-store-type=JKS 
           -Dspring.rabbitmq.ssl.key-store=file:/config/keystore/keycert.p12 
           -Dspring.rabbitmq.ssl.key-store-password=T3ciT3ci2 
           -Dspring.rabbitmq.ssl.key-store-type=PKCS12 
           -Dvertica.datasource.jdbcUrl="jdbc:vertica://${VERTICADBHOST}:${VERTICADBPORT}/FUSION" 
           -Dvertica.datasource.username=${VERTICADBUSER} 
           -Dvertica.datasource.encryptPassword=${VERTICADBPASS} 
           -Dvertica.common.schema=${VERTICADBSCHEMA} 
           -Dvertica.retailerschema.prefix=${VERTICADBRETAILERSCHEMAPREFIX}
           -Dnxg.vertica.datasource.username=${NXGVERTICADBUSER}
           -Dnxg.vertica.datasource.encryptPassword=${NXGVERTICADBPASS} 
           -Drsi.service.rabbitmq.queuename=${MY_POD_NAME}.${MY_POD_NAMESPACE}
           -Drsi.service.rabbitmq.routingkey=${MY_POD_NAME}.${MY_POD_NAMESPACE}
           -Dserver.pmp.servername=${PMPSERVERNAME}
           -Dserver.pmp.tokenid=${PMPTOKENID}
           -Dserver.pmp.key=${PMPKEY}
           -Dspring.cloud.azure.storage.accountname=${AZURESTORAGEACCOUNTNAME}
           -Dspring.cloud.azure.storage.blobContainername=${AZURESTORAGEBLOBCONTAINER}
           -jar osacoreservice.jar;
        ports:
        - containerPort: 8833
        volumeMounts:
        - name: tz-config
          mountPath: /etc/localtime
        - name: systemconf
          mountPath: /config
        - name: configkeystore
          mountPath: /config/keystore
        - name: datafolder
          mountPath: /data
        env:
        - name: MY_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: MY_POD_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
      initContainers:
      - name: initpod
        image: busybox
        command:
        - sh
        - /config/gen.sh
        volumeMounts:
        - name: systemconf
          mountPath: /config
        - name: configkeystore
          mountPath: /config/keystore            
      imagePullSecrets:
      - name: dockerhubsecret
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: osacoreservice
    track: stable
  name: osacoreservice
  namespace: osa-suite
  selfLink: /api/v1/namespaces/osa-suite/services/osacoreservice
spec:
  ports:
  - port: 80
    protocol: TCP
    targetPort: 8833
  selector:
    app: osacoreservice
    track: stable
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
